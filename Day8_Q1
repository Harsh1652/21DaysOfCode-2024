/*

Question 1:
You have three stacks of cylinders with varying heights. Remove cylinders from the top of the stacks so that all stacks are of the same height, and return this maximum possible height.

Inputs:
Three arrays of integers representing the heights of cylinders in each stack.
Output:
â€¢ The maximum possible height where all stacks are equal.

Example:
stack1 = [3, 2, 1, 1, 1]

stack2 = [4, 3, 2]

stack3 = [1, 1, 4, 1]

Output: 5

 */

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Day7_Q1 {

    public static int findMaxEqualHeight(int[] stack1, int[] stack2, int[] stack3) {
            // Reverse the stacks to make removing the top easier (arrays are represented from bottom to top)
        List<Integer> s1 = reverseArray(stack1);
        List<Integer> s2 = reverseArray(stack2);
        List<Integer> s3 = reverseArray(stack3);

        int height1 = s1.stream().mapToInt(Integer::intValue).sum();
        int height2 = s2.stream().mapToInt(Integer::intValue).sum();
        int height3 = s3.stream().mapToInt(Integer::intValue).sum();

        while (true) {
                // If any of the stacks is empty
            if (s1.isEmpty() || s2.isEmpty() || s3.isEmpty()) {
                return 0;
            }

                // If all stacks have the same height
            if (height1 == height2 && height2 == height3) {
                return height1;
            }

                // Remove the top element from the stack with the maximum height
            if (height1 >= height2 && height1 >= height3) {
                height1 -= s1.remove(s1.size() - 1);
            } else if (height2 >= height1 && height2 >= height3) {
                height2 -= s2.remove(s2.size() - 1);
            } else if (height3 >= height1 && height3 >= height2) {
                height3 -= s3.remove(s3.size() - 1);
            }
        }
    }

    private static List<Integer> reverseArray(int[] arr) {
        return Arrays.stream(arr)
                .boxed()
                .collect(Collectors.toList());
    }

    public static void main(String[] args) {
        int[] stack1 = {3, 2, 1, 1, 1};
        int[] stack2 = {4, 3, 2};
        int[] stack3 = {1, 1, 4, 1};

        int result = findMaxEqualHeight(stack1, stack2, stack3);
        System.out.println(result);
    }
}




